// -*- mode: javascript -*-
{
    "Name": "h-convergence heat square",
    "Parameters":
    {
        "alpha":4,
        "beta":1.5,
        "exact_solution":"cos(alpha*pi*x)*sin(beta*pi*y):x:y:alpha:beta",
        "grad_exact_solution":"{-alpha*pi*sin(alpha*pi*x)*sin(beta*pi*y), beta*pi*cos(alpha*pi*x)*cos(beta*pi*y)}:x:y:alpha:beta",
        "laplacian_exact_solution":"-((alpha*pi)^2)*cos(alpha*pi*x)*sin(beta*pi*y)-((beta*pi)^2)*cos(alpha*pi*x)*sin(beta*pi*y):x:y:alpha:beta"
    },
    "Meshes":
    {
        "heat":
        {
            "Import":
            {
                "filename":"$cfgdir/square.geo"
                //"hsize":0.001
            }
        }
    },
    "Materials":
    {
        "Omega":
        {
            "k":1
        }
    },
    "Models":
    {
        "heat":
        {
            "setup": {
                "heat-sources": {
                    "expr":"-laplacian_exact_solution:laplacian_exact_solution"
                }
            }
        }
    },
    "BoundaryConditions":
    {
        "heat":
        {
            "temperature":
            {
                "mybc":
                {
                    "markers":["Left","Bottom","Right","Top"],
                    "expr":"exact_solution:exact_solution"
                }
            }
        }
    },
    "PostProcess":
    {
        "heat":
        {
            "Exports":
            {
                "fields":["temperature","pid"],
                "expr":
                {
                    "exact_solution":"exact_solution:exact_solution"
                }
            },
            "Measures":
            {
                "Normal-Heat-Flux":
                {
                    "bottom":
                    {
                        "markers":"Top",
                        "direction":"inward"
                    }
                },
                "Norm":
                {
                    "error-evaluated":
                    {
                        "field":"temperature",
                        "type":["L2-error","H1-error","SemiH1-error"],
                        "solution":"exact_solution:exact_solution",
                        "grad_solution":"{grad_exact_solution_0,grad_exact_solution_1}:grad_exact_solution_0:grad_exact_solution_1"
                    }
                }
            },
            "Checkers":
            {
                "Measures":
                {
                    "Norm_error-evaluated_L2-error":
                    {
                        "value":0,
                        "tolerance":1e-2
                    },
                    "Norm_error-evaluated_H1-error":
                    {
                        "value":0,
                        "tolerance":1
                    },
                    "Norm_error-evaluated_SemiH1-error":
                    {
                        "value":0,
                        "tolerance":1
                    }
                }
            }
        }
    }

}
